//---------------------------------------------------------------------------

#pragma hdrstop

#include "Ponto3D.h"
#include "uJanela.h"
#include <cmath>
#include <Vcl.ExtCtrls.hpp>
#include <Vcl.StdCtrls.hpp>
//---------------------------------------------------------------------------
#pragma package(smart_init)

Ponto3D::Ponto3D(double nx, double ny, double nz){
    x = nx;
	y = ny;
	z = nz;

}

 int Ponto3D::xW2Vp (double xwmax, double xwmin, double xvpmax, double xvpmin){
  return ((x - xwmin)/(xwmax -xwmin)) * (xvpmax-xvpmin);
}

int Ponto3D::xW2Vp (Janela mundo, Janela vp){
  return ((x - mundo.xmin)/(mundo.xmax - mundo.xmin)) * (vp.xmax-vp.xmin);
}

int Ponto3D::yW2Vp (Janela mundo, Janela vp){
  return (1-((y - mundo.ymin)/(mundo.ymax - mundo.ymin))) * (vp.ymax-vp.ymin);
}

UnicodeString Ponto3D::toString(){
return "(" + FloatToStr(x) + ", " + FloatToStr(y) + FloatToStr(z) +  " )";
}


void Ponto3D::translada3d(double dx, double dy, double dz){

  x += dx;
  y += dy;
  z += dz;
}

void Ponto3D::escalona3d(double de){
	x = x * de;
	y = y * de;
	z = z * de;

}

void Ponto3D::rotaciona3d(int angulo, int eixo){

	int aux = x;

	float rad =  angulo * ( M_PI / 180);

	 if(eixo == 0){
		rotacionaN3d(rad);
	   }
	   if(eixo == 1){
		rotacionaX3d(rad);
	   }
	   if(eixo == 2){
		rotacionaY3d(rad);
	   }
	   if(eixo == 3 ){
		rotacionaZ3d(rad);
	   }

}